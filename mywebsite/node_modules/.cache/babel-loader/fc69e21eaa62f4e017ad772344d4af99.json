{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/DUMDEV/mywebsite/src/components/forms/PortfolioBasicInfo.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport submit from '../../atoms/submit';\nimport { renderTextField } from '../../atoms/renderFields';\nimport Button from '@material-ui/core/Button'; // below Code allow to dly design\n\n/*const renderField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n\t<input {...input} placeholder={label}type={type} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n)*/\n\nconst fields = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n};\n\nconst SubmitValidationForm = props => {\n  const error = props.error,\n        handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        reset = props.reset,\n        submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(submit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: renderTextField,\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"location\",\n    type: \"location\",\n    component: renderTextField,\n    label: \"Location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"phone\",\n    type: \"phone\",\n    component: renderTextField,\n    label: \"Phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"web\",\n    type: \"web\",\n    component: renderTextField,\n    label: \"Web\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: renderTextField,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"intro\",\n    type: \"intro\",\n    component: renderTextField,\n    label: \"Intro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), error && React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, error), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    disabled: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Log In\"), React.createElement(Button, {\n    color: \"secondary\",\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'submitValidation' // a unique identifier for this form\n\n})(SubmitValidationForm);","map":{"version":3,"sources":["/home/ec2-user/DUMDEV/mywebsite/src/components/forms/PortfolioBasicInfo.js"],"names":["React","Field","reduxForm","submit","renderTextField","Button","fields","SubmitValidationForm","props","error","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport submit from '../../atoms/submit'\nimport { renderTextField } from '../../atoms/renderFields';\nimport Button from '@material-ui/core/Button';\n\n// below Code allow to dly design\n/*const renderField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n\t<input {...input} placeholder={label}type={type} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n)*/\nconst fields = () => {\n\t\treturn(<div>\n\t\t\t\t</div>\n\t)\n}\n\n\nconst SubmitValidationForm = props => {\n  const { error, handleSubmit, pristine, reset, submitting } = props\n  return (\n    <form onSubmit={handleSubmit(submit)}>\n      <Field\n        name=\"username\"\n        type=\"text\"\n        component={renderTextField}\n        label=\"Username\"\n      />\n      <Field\n        name=\"location\"\n        type=\"location\"\n        component={renderTextField}\n        label=\"Location\"\n      />\n      <Field\n        name=\"phone\"\n        type=\"phone\"\n        component={renderTextField}\n        label=\"Phone\"\n      />\n      <Field\n        name=\"web\"\n        type=\"web\"\n        component={renderTextField}\n        label=\"Web\"\n      />\n      <Field\n        name=\"email\"\n        type=\"email\"\n        component={renderTextField}\n        label=\"Email\"\n      />\n      <Field\n        name=\"intro\"\n        type=\"intro\"\n        component={renderTextField}\n        label=\"Intro\"\n      />\n      {error && <strong>{error}</strong>}\n      <div>\n        <Button color=\"primary\" type=\"submit\" disabled={submitting}>\n          Log In\n        </Button>\n        <Button color=\"secondary\"type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'submitValidation' // a unique identifier for this form\n})(SubmitValidationForm);\n"]},"metadata":{},"sourceType":"module"}