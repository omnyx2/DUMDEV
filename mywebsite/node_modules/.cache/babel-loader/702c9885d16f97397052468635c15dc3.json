{"ast":null,"code":"import { SubmissionError } from 'redux-form';\nimport { signInLocal } from '../actions';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction submit(values) {\n  const username = values.username;\n  const password = values.password;\n  return sleep(100).then(() => {\n    // simulate server latency\n    if (!!!username) {\n      throw new SubmissionError({\n        username: 'User name is empty now',\n        _error: 'Login failed!'\n      });\n    } else if (!!!password) {\n      throw new SubmissionError({\n        password: 'Password is empty now',\n        _error: 'Login failed!'\n      });\n    } else {\n      window.alert(\"You submitted:\\n\\n\".concat(JSON.stringify(values, null, 2)));\n      signInLocal(username, password);\n    }\n  });\n}\n\nexport default submit;","map":{"version":3,"sources":["/home/ec2-user/DUMDEV/mywebsite/src/atoms/submit.js"],"names":["SubmissionError","signInLocal","sleep","ms","Promise","resolve","setTimeout","submit","values","username","password","then","_error","window","alert","JSON","stringify"],"mappings":"AAAA,SAASA,eAAT,QAAgC,YAAhC;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAApB;;AAEA,SAASI,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,QAAMC,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACA,QAAMC,QAAQ,GAAGF,MAAM,CAACE,QAAxB;AACA,SAAOR,KAAK,CAAC,GAAD,CAAL,CAAWS,IAAX,CAAgB,MAAM;AAC/B;AACI,QAAI,CAAC,CAAC,CAACF,QAAP,EAAiB;AACf,YAAM,IAAIT,eAAJ,CAAoB;AACxBS,QAAAA,QAAQ,EAAE,wBADc;AAExBG,QAAAA,MAAM,EAAE;AAFgB,OAApB,CAAN;AAID,KALD,MAKO,IAAI,CAAC,CAAC,CAACF,QAAP,EAAiB;AACtB,YAAM,IAAIV,eAAJ,CAAoB;AACxBU,QAAAA,QAAQ,EAAE,uBADc;AAExBE,QAAAA,MAAM,EAAE;AAFgB,OAApB,CAAN;AAID,KALM,MAKA;AACLC,MAAAA,MAAM,CAACC,KAAP,6BAAkCC,IAAI,CAACC,SAAL,CAAeR,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAlC;AACHP,MAAAA,WAAW,CAACQ,QAAD,EAAWC,QAAX,CAAX;AACE;AACF,GAhBM,CAAP;AAiBD;;AAED,eAAeH,MAAf","sourcesContent":["import { SubmissionError } from 'redux-form';\nimport { signInLocal } from '../actions';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction submit(values) {\n  const username = values.username;\n  const password = values.password;\n  return sleep(100).then(() => {\n// simulate server latency\n    if (!!!username) {\n      throw new SubmissionError({\n        username: 'User name is empty now',\n        _error: 'Login failed!'\n      })\n    } else if (!!!password) {\n      throw new SubmissionError({\n        password: 'Password is empty now',\n        _error: 'Login failed!'\n      })\n    } else {\n      window.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`)\n\t  signInLocal(username, password);\n    }\n  })\n}\n\nexport default submit\n"]},"metadata":{},"sourceType":"module"}