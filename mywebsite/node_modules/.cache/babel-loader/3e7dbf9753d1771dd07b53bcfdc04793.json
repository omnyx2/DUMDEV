{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/DUMDEV/mywebsite/src/components/forms/PortfolioArrayInfo.js\";\nimport React from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport validate from './validates/validateSignUp';\nimport jsonData from './portfolioData';\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, label), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  type: type,\n  placeholder: label,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n})), touched && error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, error)));\n\nconst renderExpertise = ({\n  fields,\n  meta: {\n    error,\n    submitFailed\n  }\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => fields.push({}),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Add EXPERTISE\"), submitFailed && error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, error)), fields.map((expertise, index) => React.createElement(\"li\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, console.log(expertise), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"Expertise #\", index + 1), React.createElement(Field, {\n  name: \"\".concat(expertise, \".title\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Subject\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"\".concat(expertise, \".content\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Explanation\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"\".concat(expertise, \".degree\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Degree\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"button\",\n  title: \"Remove Member\",\n  onClick: () => fields.remove(index),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \"Remove\"))));\n\nconst renderExperience = ({\n  fields,\n  meta: {\n    error,\n    submitFailed\n  }\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => fields.push({}),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \"Add EXPERIENCE\"), submitFailed && error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, error)), fields.map((experience, index) => React.createElement(\"li\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, console.log(experience), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, \"Experience #\", index + 1), React.createElement(Field, {\n  name: \"\".concat(experience, \".title\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Subject\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"\".concat(experience, \".content\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Explanation\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"\".concat(experience, \".degree\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Degree\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"button\",\n  title: \"Remove Member\",\n  onClick: () => fields.remove(index),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, \"Remove\"))));\n\nconst renderEducation = ({\n  fields,\n  meta: {\n    error,\n    submitFailed\n  }\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => fields.push({}),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, \"Add EDUCATION\"), submitFailed && error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, error)), fields.map((education, index) => React.createElement(\"li\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, \"Education #\", index + 1), React.createElement(Field, {\n  name: \"\".concat(education, \".title\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Subject\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"\".concat(education, \".startYear\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Start\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"\".concat(education, \".endYear\"),\n  type: \"text\",\n  component: renderField,\n  label: \"End\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"\".concat(education, \".position\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Subject\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"\".concat(education, \".content\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Explanation\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"button\",\n  title: \"Remove Member\",\n  onClick: () => fields.remove(index),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}, \"Remove\"))));\n\nconst renderAwards = ({\n  fields,\n  meta: {\n    error,\n    submitFailed\n  }\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 148\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => fields.push({}),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n}, \"Add AWARDS\"), submitFailed && error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}, error)), fields.map((award, index) => React.createElement(\"li\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}, \"Awards #\", index + 1), React.createElement(Field, {\n  name: \"\".concat(award, \".title\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Subject\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 157\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"\".concat(award, \".content\"),\n  type: \"text\",\n  component: renderField,\n  label: \"Explanation\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"button\",\n  title: \"Remove Member\",\n  onClick: () => fields.remove(index),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 169\n  },\n  __self: this\n}, \"Remove\"))));\n\nconst FieldArraysForm = props => {\n  console.log(jsonData.expertise.items);\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        reset = props.reset,\n        submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(FieldArray, {\n    name: \"expertise\",\n    component: renderExpertise,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(FieldArray, {\n    name: \"experience\",\n    component: renderExperience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), React.createElement(FieldArray, {\n    name: \"education\",\n    component: renderEducation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(FieldArray, {\n    name: \"awards\",\n    component: renderAwards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Clear Values\")));\n};\n\nvar initVal = type => {\n  switch (type) {\n    case \"EXPERTISE\":\n      return jsonData.expertise.items;\n\n    case \"EXPERIENCE\":\n      return jsonData.experience.items;\n\n    case \"EDUCATION\":\n      return jsonData.education.items;\n\n    case \"AWARDS\":\n      return jsonData.awards.items;\n\n    default:\n      return [];\n  }\n};\n\nexport default reduxForm({\n  form: 'fieldArrays',\n  // a unique identifier for this form\n  validate,\n  initialValues: {\n    expertise: initVal(\"EXPERTISE\"),\n    experience: initVal(\"EXPERIENCE\"),\n    education: initVal(\"EDUCATION\"),\n    awards: initVal(\"AWARDS\")\n  }\n})(FieldArraysForm);","map":{"version":3,"sources":["/home/ec2-user/DUMDEV/mywebsite/src/components/forms/PortfolioArrayInfo.js"],"names":["React","Field","FieldArray","reduxForm","validate","jsonData","renderField","input","label","type","meta","touched","error","renderExpertise","fields","submitFailed","push","map","expertise","index","console","log","remove","renderExperience","experience","renderEducation","education","renderAwards","award","FieldArraysForm","props","items","handleSubmit","pristine","reset","submitting","initVal","awards","form","initialValues"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, FieldArray, reduxForm } from 'redux-form'\nimport validate from './validates/validateSignUp'\nimport jsonData from './portfolioData';\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} type={type} placeholder={label} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n)\n\nconst renderExpertise = ({ fields, meta: { error, submitFailed } }) => (\n  <ul>\n    <li>\n      <button type=\"button\" onClick={() => fields.push({})}>\n        Add EXPERTISE\n      </button>\n      {submitFailed && error && <span>{error}</span>}\n    </li>\n    {fields.map((expertise, index) => (\t\n\t<li key={ index }>\n\t\t{console.log(expertise)}\n        <h4>Expertise #{index + 1}</h4>\n        <Field\n          name={`${expertise}.title`}\n          type=\"text\"\n          component={renderField}\n          label=\"Subject\"\n        />\n        <Field\n          name={`${expertise}.content`}\n          type=\"text\"\n          component={renderField}\n          label=\"Explanation\"\n        />\n        <Field\n          name={`${expertise}.degree`}\n          type=\"text\"\n          component={renderField}\n          label=\"Degree\"\n        />\n        <button\n          type=\"button\"\n          title=\"Remove Member\"\n\t\t  onClick={() => fields.remove(index)}\n\t\t>Remove</button>\n  \t\t</li>\n    ))}\n  </ul>\n)\nconst renderExperience = ({ fields, meta: { error, submitFailed } }) => (\n  <ul>\n    <li>\n      <button type=\"button\" onClick={() => fields.push({})}>\n        Add EXPERIENCE\n      </button>\n      {submitFailed && error && <span>{error}</span>}\n    </li>\n    {fields.map((experience, index) => (\t\n\t<li key={ index }>\n\t\t{console.log(experience)}\n        <h4>Experience #{index + 1}</h4>\n        <Field\n          name={`${experience}.title`}\n          type=\"text\"\n          component={renderField}\n          label=\"Subject\"\n        />\n        <Field\n          name={`${experience}.content`}\n          type=\"text\"\n          component={renderField}\n          label=\"Explanation\"\n        />\n        <Field\n          name={`${experience}.degree`}\n          type=\"text\"\n          component={renderField}\n          label=\"Degree\"\n        />\n        <button\n          type=\"button\"\n          title=\"Remove Member\"\n\t\t  onClick={() => fields.remove(index)}\n\t\t>Remove</button>\n  \t\t</li>\n    ))}\n  </ul>\n)\n\nconst renderEducation = ({ fields, meta: { error, submitFailed } }) => (\n  <ul>\n    <li>\n      <button type=\"button\" onClick={() => fields.push({})}>\n        Add EDUCATION\n      </button>\n      {submitFailed && error && <span>{error}</span>}\n    </li>\n    {fields.map((education, index) => (\t\n\t<li key={ index }>\n        <h4>Education #{index + 1}</h4>\n        <Field\n          name={`${education}.title`}\n          type=\"text\"\n          component={renderField}\n          label=\"Subject\"\n        />\n        <Field\n          name={`${education}.startYear`}\n          type=\"text\"\n          component={renderField}\n          label=\"Start\"\n        />\n        <Field\n          name={`${education}.endYear`}\n          type=\"text\"\n          component={renderField}\n          label=\"End\"\n        />\n        <Field\n          name={`${education}.position`}\n          type=\"text\"\n          component={renderField}\n          label=\"Subject\"\n        />\n        <Field\n          name={`${education}.content`}\n          type=\"text\"\n          component={renderField}\n          label=\"Explanation\"\n        />\n        <button\n          type=\"button\"\n          title=\"Remove Member\"\n\t\t  onClick={() => fields.remove(index)}\n\t\t>Remove</button>\n  \t\t</li>\n    ))}\n  </ul>\n)\n\nconst renderAwards = ({ fields, meta: { error, submitFailed } }) => (\n  <ul>\n    <li>\n      <button type=\"button\" onClick={() => fields.push({})}>\n        Add AWARDS\n      </button>\n      {submitFailed && error && <span>{error}</span>}\n    </li>\n    {fields.map((award, index) => (\t\n\t<li key={ index }>\n        <h4>Awards #{index + 1}</h4>\n        <Field\n          name={`${award}.title`}\n          type=\"text\"\n          component={renderField}\n          label=\"Subject\"\n        />\n        <Field\n          name={`${award}.content`}\n          type=\"text\"\n          component={renderField}\n          label=\"Explanation\"\n        />\n        <button\n          type=\"button\"\n          title=\"Remove Member\"\n\t\t  onClick={() => fields.remove(index)}\n\t\t>Remove</button>\n  \t\t</li>\n    ))}\n  </ul>\n)\n\n\nconst FieldArraysForm = props => {\n  console.log(jsonData.expertise.items);\t   \n  const { handleSubmit, pristine, reset, submitting } = props\n  return (\n    <form onSubmit={handleSubmit}>\n      <FieldArray name=\"expertise\" component={renderExpertise} />\n      <FieldArray name=\"experience\" component={renderExperience }/>\n      <FieldArray name=\"education\" component={renderEducation} />\n      <FieldArray name=\"awards\" component={renderAwards} />\n      <div>\n        <button type=\"submit\" disabled={submitting}>\n          Submit\n        </button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  )\n}\nvar initVal  = (type) =>{\n\tswitch(type){\n\t\t\tcase \"EXPERTISE\": return jsonData.expertise.items;\n\t\t\tcase \"EXPERIENCE\": return jsonData.experience.items;\n\t\t\tcase \"EDUCATION\": return jsonData.education.items;\n\t\t\tcase \"AWARDS\": return jsonData.awards.items;\n\t\t\tdefault : return [];\t\t\n\t}\n}\nexport default reduxForm({\n  form: 'fieldArrays', // a unique identifier for this form\n  validate,\n  initialValues:{\n\texpertise: initVal(\"EXPERTISE\"),\n\texperience: initVal(\"EXPERIENCE\"),\n\teducation: initVal(\"EDUCATION\"),\n\tawards: initVal(\"AWARDS\"),\n  }\n})(FieldArraysForm);\n"]},"metadata":{},"sourceType":"module"}