{"ast":null,"code":"import{SubmissionError}from'redux-form';import{signInLocal}from'../actions';var sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};function submit(values){var username=values.username;var password=values.password;return sleep(100).then(function(){// simulate server latency\nif(!!!username){throw new SubmissionError({username:'User name is empty now',_error:'Login failed!'});}else if(!!!password){throw new SubmissionError({password:'Password is empty now',_error:'Login failed!'});}else{window.alert(\"You submitted:\\n\\n\".concat(JSON.stringify(values,null,2)));signInLocal(username,password);}});}export default submit;","map":{"version":3,"sources":["/home/ec2-user/DUMDEV/mywebsite/src/atoms/submit.js"],"names":["SubmissionError","signInLocal","sleep","ms","Promise","resolve","setTimeout","submit","values","username","password","then","_error","window","alert","JSON","stringify"],"mappings":"AAAA,OAASA,eAAT,KAAgC,YAAhC,CACA,OAASC,WAAT,KAA4B,YAA5B,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,EAAE,QAAI,IAAIC,CAAAA,OAAJ,CAAY,SAAAC,OAAO,QAAIC,CAAAA,UAAU,CAACD,OAAD,CAAUF,EAAV,CAAd,EAAnB,CAAJ,EAAhB,CAEA,QAASI,CAAAA,MAAT,CAAgBC,MAAhB,CAAwB,CACtB,GAAMC,CAAAA,QAAQ,CAAGD,MAAM,CAACC,QAAxB,CACA,GAAMC,CAAAA,QAAQ,CAAGF,MAAM,CAACE,QAAxB,CACA,MAAOR,CAAAA,KAAK,CAAC,GAAD,CAAL,CAAWS,IAAX,CAAgB,UAAM,CAC/B;AACI,GAAI,CAAC,CAAC,CAACF,QAAP,CAAiB,CACf,KAAM,IAAIT,CAAAA,eAAJ,CAAoB,CACxBS,QAAQ,CAAE,wBADc,CAExBG,MAAM,CAAE,eAFgB,CAApB,CAAN,CAID,CALD,IAKO,IAAI,CAAC,CAAC,CAACF,QAAP,CAAiB,CACtB,KAAM,IAAIV,CAAAA,eAAJ,CAAoB,CACxBU,QAAQ,CAAE,uBADc,CAExBE,MAAM,CAAE,eAFgB,CAApB,CAAN,CAID,CALM,IAKA,CACLC,MAAM,CAACC,KAAP,6BAAkCC,IAAI,CAACC,SAAL,CAAeR,MAAf,CAAuB,IAAvB,CAA6B,CAA7B,CAAlC,GACHP,WAAW,CAACQ,QAAD,CAAWC,QAAX,CAAX,CACE,CACF,CAhBM,CAAP,CAiBD,CAED,cAAeH,CAAAA,MAAf","sourcesContent":["import { SubmissionError } from 'redux-form';\nimport { signInLocal } from '../actions';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction submit(values) {\n  const username = values.username;\n  const password = values.password;\n  return sleep(100).then(() => {\n// simulate server latency\n    if (!!!username) {\n      throw new SubmissionError({\n        username: 'User name is empty now',\n        _error: 'Login failed!'\n      })\n    } else if (!!!password) {\n      throw new SubmissionError({\n        password: 'Password is empty now',\n        _error: 'Login failed!'\n      })\n    } else {\n      window.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`)\n\t  signInLocal(username, password);\n    }\n  })\n}\n\nexport default submit\n"]},"metadata":{},"sourceType":"module"}