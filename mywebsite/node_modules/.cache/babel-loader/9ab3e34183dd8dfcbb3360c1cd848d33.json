{"ast":null,"code":"import _defineProperty from \"/home/ec2-user/DUMDEV/mywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ec2-user/DUMDEV/mywebsite/src/components/pages/SerisePage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { connect } from 'react-redux';\nimport { fetchSerises } from '../../actions';\n\nclass SeriseList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderSerise = serise => {\n      if (serise === undefined) return;\n      if (serise === {}) return;\n\n      const _serise = _objectSpread({}, serise),\n            title = _serise.title,\n            author = _serise.author,\n            posts = _serise.posts; //we need date of serise, id of serise\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"serise-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"serise-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"serise-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \" \", title, \" \"), React.createElement(\"div\", {\n        className: \"serise-author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \" \", author, \" \"), React.createElement(\"div\", {\n        className: \"serise-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \" Oct.22.2019 \"), React.createElement(\"div\", {\n        className: \"serise-Intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \" LoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoerm\"))));\n    };\n\n    this.seriseLoader = async page => {\n      // controll end of Infinty scroll\t\n      const endSeriseFlag = await this.props.fetchSerises(page - 1);\n\n      if (endSeriseFlag === false) {\n        this.setState(state => {\n          return {\n            hasMoreItems: false\n          };\n        });\n      } // Starting point of page is 1, So we need to set it as 0\n\n\n      const start = (page - 1) * 5;\n      const end = page * 5;\n      const serise = [];\n\n      for (let i = start; i < end; i++) {\n        serise.push(this.renderSerise(this.props.serise[i]));\n      }\n\n      this.setState(state => {\n        return {\n          prettySerise: this.state.prettySerise.concat(serise)\n        };\n      });\n    };\n\n    this.state = {\n      hasMoreItems: true,\n      prettySerise: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"infinite-scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(InfiniteScroll, {\n      pageState: 0,\n      loadMore: this.seriseLoader,\n      hasMore: this.state.hasMoreItems,\n      loader: React.createElement(\"div\", {\n        className: \"loader\",\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Loading ...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.prettySerise));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    serise: state.serise,\n    currentId: state.auth.userId,\n    isSignedIn: state.auth.siSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchSerises\n})(SeriseList);","map":{"version":3,"sources":["/home/ec2-user/DUMDEV/mywebsite/src/components/pages/SerisePage.js"],"names":["React","InfiniteScroll","connect","fetchSerises","SeriseList","Component","constructor","props","renderSerise","serise","undefined","title","author","posts","seriseLoader","page","endSeriseFlag","setState","state","hasMoreItems","start","end","i","push","prettySerise","concat","render","mapStateToProps","currentId","auth","userId","isSignedIn","siSignedIn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { connect } from 'react-redux';\nimport { fetchSerises } from '../../actions';\n\nclass SeriseList extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasMoreItems: true,\n\t\t\tprettySerise:[]\n\t\t}\n\t}\n\trenderSerise = (serise) => {\n\t\tif(serise === undefined) return;\n\t\tif(serise === {}) return;\n\t\tconst { title, author, posts } = { ...serise};\t\t \n\t\t//we need date of serise, id of serise\n\t\treturn (<div>\n\t\t\t\t\t<div className=\"serise-content\">\n\t\t\t\t\t\t<div className=\"serise-card\">\n\t\t\t\t\t\t\t<div className=\"serise-title\"> {title} </div>\n\t\t\t\t\t\t\t<div className=\"serise-author\"> { author } </div>\n\t\t\t\t\t\t\t<div className=\"serise-date\"> Oct.22.2019 </div>\n\t\t\t\t\t\t\t<div className=\"serise-Intro\"> LoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoermLoerm</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t);\n\n\t}\n\n\tseriseLoader = async(page) => {\n\t\t// controll end of Infinty scroll\t\n\t\tconst endSeriseFlag = await this.props.fetchSerises(page-1);\n\t    if( endSeriseFlag === false){\n\t\t\tthis.setState( (state) => { return {hasMoreItems: false }});\n\t\t}\n\t\t// Starting point of page is 1, So we need to set it as 0\n\t\tconst start = (page-1)*5;\n\t\tconst end = (page)*5;\n\t\tconst serise = [];\n\t\tfor( let i=start; i<end; i++){\n\t\t\tserise.push(this.renderSerise(this.props.serise[i]));\n\t\t}\n\t\tthis.setState(state => {\n\t\t\t\treturn { prettySerise: this.state.prettySerise.concat(serise)}\n\t\t});\n\t}\n\t\n\trender(){\n\t\treturn (\n\t\t\t\t<div className=\"infinite-scroll\">\n\t\t\t\t\t<InfiniteScroll\n\t\t\t\t\t\t\tpageState={0}\n\t\t\t\t\t\t\tloadMore={this.seriseLoader}\n\t\t\t\t\t\t\thasMore={this.state.hasMoreItems}\n\t\t\t\t\t\t\tloader={<div className=\"loader\" key={0}>Loading ...</div>}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ this.state.prettySerise}\n\t\t\t\t\t</InfiniteScroll>\n\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\t\tserise: state.serise,\n\t\t\tcurrentId: state.auth.userId,\n\t\t\tisSignedIn: state.auth.siSignedIn\n\t};\n}\n\nexport default connect(mapStateToProps, { fetchSerises })(SeriseList);\n"]},"metadata":{},"sourceType":"module"}