{"ast":null,"code":"import React from'react';import{Field,reduxForm}from'redux-form';import submit from'../../atoms/submit';import{renderTextField}from'../../atoms/renderFields';import Button from'@material-ui/core/Button';// below Code allow to dly design\n/*const renderField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n\t<input {...input} placeholder={label}type={type} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n)*/var fields=function fields(){return React.createElement(\"div\",null);};var SubmitValidationForm=function SubmitValidationForm(props){var error=props.error,handleSubmit=props.handleSubmit,pristine=props.pristine,reset=props.reset,submitting=props.submitting;return React.createElement(\"form\",{onSubmit:handleSubmit(submit)},React.createElement(Field,{name:\"username\",type:\"text\",component:renderTextField,label:\"Username\"}),React.createElement(Field,{name:\"location\",type:\"location\",component:renderTextField,label:\"Location\"}),React.createElement(Field,{name:\"phone\",type:\"phone\",component:renderTextField,label:\"Phone\"}),React.createElement(Field,{name:\"web\",type:\"web\",component:renderTextField,label:\"Web\"}),React.createElement(Field,{name:\"email\",type:\"email\",component:renderTextField,label:\"Email\"}),React.createElement(Field,{name:\"intro\",type:\"intro\",component:renderTextField,label:\"Intro\"}),error&&React.createElement(\"strong\",null,error),React.createElement(\"div\",null,React.createElement(Button,{color:\"primary\",type:\"submit\",disabled:submitting},\"Log In\"),React.createElement(Button,{color:\"secondary\",type:\"button\",disabled:pristine||submitting,onClick:reset},\"Clear Values\")));};export default reduxForm({form:'submitValidation'// a unique identifier for this form\n})(SubmitValidationForm);","map":{"version":3,"sources":["/home/ec2-user/DUMDEV/mywebsite/src/components/forms/PortfolioBasicInfo.js"],"names":["React","Field","reduxForm","submit","renderTextField","Button","fields","SubmitValidationForm","props","error","handleSubmit","pristine","reset","submitting","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CACA,OAASC,eAAT,KAAgC,0BAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA;AACA;;;;;;;;GASA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,MAAO,gCAAP,CAGD,CAJD,CAOA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAAC,KAAK,CAAI,IAC5BC,CAAAA,KAD4B,CACyBD,KADzB,CAC5BC,KAD4B,CACrBC,YADqB,CACyBF,KADzB,CACrBE,YADqB,CACPC,QADO,CACyBH,KADzB,CACPG,QADO,CACGC,KADH,CACyBJ,KADzB,CACGI,KADH,CACUC,UADV,CACyBL,KADzB,CACUK,UADV,CAEpC,MACE,6BAAM,QAAQ,CAAEH,YAAY,CAACP,MAAD,CAA5B,EACE,oBAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAEC,eAHb,CAIE,KAAK,CAAC,UAJR,EADF,CAOE,oBAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,SAAS,CAAEA,eAHb,CAIE,KAAK,CAAC,UAJR,EAPF,CAaE,oBAAC,KAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,SAAS,CAAEA,eAHb,CAIE,KAAK,CAAC,OAJR,EAbF,CAmBE,oBAAC,KAAD,EACE,IAAI,CAAC,KADP,CAEE,IAAI,CAAC,KAFP,CAGE,SAAS,CAAEA,eAHb,CAIE,KAAK,CAAC,KAJR,EAnBF,CAyBE,oBAAC,KAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,SAAS,CAAEA,eAHb,CAIE,KAAK,CAAC,OAJR,EAzBF,CA+BE,oBAAC,KAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,SAAS,CAAEA,eAHb,CAIE,KAAK,CAAC,OAJR,EA/BF,CAqCGK,KAAK,EAAI,kCAASA,KAAT,CArCZ,CAsCE,+BACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,IAAI,CAAC,QAA7B,CAAsC,QAAQ,CAAEI,UAAhD,WADF,CAIE,oBAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAAyB,IAAI,CAAC,QAA9B,CAAuC,QAAQ,CAAEF,QAAQ,EAAIE,UAA7D,CAAyE,OAAO,CAAED,KAAlF,iBAJF,CAtCF,CADF,CAiDD,CAnDD,CAqDA,cAAeV,CAAAA,SAAS,CAAC,CACvBY,IAAI,CAAE,kBAAmB;AADF,CAAD,CAAT,CAEZP,oBAFY,CAAf","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport submit from '../../atoms/submit'\nimport { renderTextField } from '../../atoms/renderFields';\nimport Button from '@material-ui/core/Button';\n\n// below Code allow to dly design\n/*const renderField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n\t<input {...input} placeholder={label}type={type} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n)*/\nconst fields = () => {\n\t\treturn(<div>\n\t\t\t\t</div>\n\t)\n}\n\n\nconst SubmitValidationForm = props => {\n  const { error, handleSubmit, pristine, reset, submitting } = props\n  return (\n    <form onSubmit={handleSubmit(submit)}>\n      <Field\n        name=\"username\"\n        type=\"text\"\n        component={renderTextField}\n        label=\"Username\"\n      />\n      <Field\n        name=\"location\"\n        type=\"location\"\n        component={renderTextField}\n        label=\"Location\"\n      />\n      <Field\n        name=\"phone\"\n        type=\"phone\"\n        component={renderTextField}\n        label=\"Phone\"\n      />\n      <Field\n        name=\"web\"\n        type=\"web\"\n        component={renderTextField}\n        label=\"Web\"\n      />\n      <Field\n        name=\"email\"\n        type=\"email\"\n        component={renderTextField}\n        label=\"Email\"\n      />\n      <Field\n        name=\"intro\"\n        type=\"intro\"\n        component={renderTextField}\n        label=\"Intro\"\n      />\n      {error && <strong>{error}</strong>}\n      <div>\n        <Button color=\"primary\" type=\"submit\" disabled={submitting}>\n          Log In\n        </Button>\n        <Button color=\"secondary\"type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'submitValidation' // a unique identifier for this form\n})(SubmitValidationForm);\n"]},"metadata":{},"sourceType":"module"}