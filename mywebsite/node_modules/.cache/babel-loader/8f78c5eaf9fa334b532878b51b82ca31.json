{"ast":null,"code":"import _defineProperty from \"/home/ec2-user/DUMDEV/mywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/home/ec2-user/DUMDEV/mywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ec2-user/DUMDEV/mywebsite/src/components/pages/post/PostCreatePage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n\\tpadding: 5%\\n\\tflex: 9 0 700px;\\n\\tmax-width: 700px;\\n\\tmin-width: 600px;\\n\\tdisplay: block;\\n\\tdisplay: inline-block; \\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: block;\\n\\tmax-width: 700px;\\n\\tflex: 9 0 600px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tflex: 1 0 70px;\\n\\tmax-width: 100px;\\n\\tpadding-right: 150px;\\n\\tpadding-left: 10px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PostForm from './PostFormPage';\nimport { post } from '../../../apis/serverRequest';\nimport TagsInput from 'react-tagsinput';\nimport PostTypeSelector from './PostTypeSelector';\nimport styled from 'styled-components';\nimport PostMarkdown from './PostMarkdown';\nimport PostSubmit from './PostSubmit'; // const StyledPostSubmit = styled(PostSubmit)`\n// `;\n// const StyledTagsInput = styled(TagsInput)`\n// `;\n\nconst StyledPostTypeSelector = styled(PostTypeSelector)(_templateObject());\nconst StyledPostForm = styled(PostForm)(_templateObject2());\nconst StyledPostMarkdown = styled(PostMarkdown)(_templateObject3());\n\nclass CreatePost extends React.Component {\n  constructor() {\n    super();\n\n    this.initValue = () => {\n      const _this$state = _objectSpread({}, this.state),\n            mainTitle = _this$state.mainTitle,\n            subTitle = _this$state.subTitle,\n            content = _this$state.content,\n            tags = _this$state.tags;\n\n      return {\n        tags,\n        mainTitle,\n        subTitle,\n        content\n      };\n    };\n\n    this.handleTagsChange = tags => {\n      this.setState({\n        tags: tags\n      });\n      localStorage.setItem('rememberPost', JSON.stringify(this.state));\n    };\n\n    this.handleCommit = async data => {//\tconst response = await post.post(\"/post/\", this.state);\n    };\n\n    this.handlePostType = type => {\n      this.setState({\n        type\n      });\n      console.log(this.state.type);\n    };\n\n    this.handleSave = childState => {\n      this.setState({\n        mainTitle: childState.mainTitle\n      });\n      this.setState({\n        content: childState.content\n      });\n      this.setState({\n        subTitle: childState.subTitle\n      });\n      console.log(this.state);\n      localStorage.setItem('rememberPost', JSON.stringify(this.state));\n    };\n\n    let _mainTitle = 'Title',\n        _tags = ['default'],\n        _subTitle = 'Sub title',\n        _content = 'fill in ...',\n        _type = 'POST';\n    const rememberPost = JSON.parse(localStorage.getItem('rememberPost'));\n\n    if (rememberPost != null) {\n      _mainTitle = rememberPost.mainTitle ? rememberPost.mainTitle : _mainTitle;\n      _tags = rememberPost.tags ? rememberPost.tags : [];\n      _subTitle = rememberPost.subTitle ? rememberPost.subTitle : _subTitle;\n      _content = rememberPost.content ? rememberPost.content : _content;\n    }\n\n    this.state = {\n      type: _type,\n      tags: _tags,\n      mainTitle: _mainTitle,\n      subTitle: _subTitle,\n      content: _content\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"posting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"plain-post-form-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"plain-post-form-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      className: \"plain-post-form-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(StyledPostForm, {\n      onSave: this.handleSave,\n      post: this.initValue(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(StyledPostTypeSelector, {\n      handlePostType: this.handlePostType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(StyledPostMarkdown, {\n      post: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(TagsInput, {\n      value: this.state.tags,\n      onChange: this.handleTagsChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(PostSubmit, {\n      data: this.handleCommit,\n      target: post,\n      method: \"post\",\n      value: \"Commit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CreatePost;","map":{"version":3,"sources":["/home/ec2-user/DUMDEV/mywebsite/src/components/pages/post/PostCreatePage.js"],"names":["React","PostForm","post","TagsInput","PostTypeSelector","styled","PostMarkdown","PostSubmit","StyledPostTypeSelector","StyledPostForm","StyledPostMarkdown","CreatePost","Component","constructor","initValue","state","mainTitle","subTitle","content","tags","handleTagsChange","setState","localStorage","setItem","JSON","stringify","handleCommit","data","handlePostType","type","console","log","handleSave","childState","rememberPost","parse","getItem","render","display","flexDirection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAAQC,IAAR,QAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;AACA;AACA;;AACA,MAAMC,sBAAsB,GAAGH,MAAM,CAACD,gBAAD,CAAT,mBAA5B;AAMA,MAAMK,cAAc,GAAGJ,MAAM,CAACJ,QAAD,CAAT,oBAApB;AAKA,MAAMS,kBAAkB,GAAGL,MAAM,CAACC,YAAD,CAAT,oBAAxB;;AAWA,MAAMK,UAAN,SAAyBX,KAAK,CAACY,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAuBdC,SAvBc,GAuBF,MAAM;AAAA,4CACiC,KAAKC,KADtC;AAAA,YACTC,SADS,eACTA,SADS;AAAA,YACEC,QADF,eACEA,QADF;AAAA,YACYC,OADZ,eACYA,OADZ;AAAA,YACqBC,IADrB,eACqBA,IADrB;;AAEhB,aAAO;AACLA,QAAAA,IADK;AAELH,QAAAA,SAFK;AAGLC,QAAAA,QAHK;AAILC,QAAAA;AAJK,OAAP;AAMD,KA/Ba;;AAAA,SAiCdE,gBAjCc,GAiCKD,IAAI,IAAI;AACzB,WAAKE,QAAL,CAAc;AAACF,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAe,KAAKV,KAApB,CAArC;AACD,KApCa;;AAAA,SAqCdW,YArCc,GAqCC,MAAMC,IAAN,IAAc,CAC3B;AACD,KAvCa;;AAAA,SAwCdC,cAxCc,GAwCGC,IAAI,IAAI;AACvB,WAAKR,QAAL,CAAc;AAACQ,QAAAA;AAAD,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWc,IAAvB;AACD,KA3Ca;;AAAA,SA6CdG,UA7Cc,GA6CDC,UAAU,IAAI;AACzB,WAAKZ,QAAL,CAAc;AAACL,QAAAA,SAAS,EAAEiB,UAAU,CAACjB;AAAvB,OAAd;AACA,WAAKK,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAEe,UAAU,CAACf;AAArB,OAAd;AACA,WAAKG,QAAL,CAAc;AAACJ,QAAAA,QAAQ,EAAEgB,UAAU,CAAChB;AAAtB,OAAd;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;AACAO,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAe,KAAKV,KAApB,CAArC;AACD,KAnDa;;AAEZ,QAAIC,UAAS,GAAG,OAAhB;AAAA,QACEG,KAAI,GAAG,CAAC,SAAD,CADT;AAAA,QAEEF,SAAQ,GAAG,WAFb;AAAA,QAGDC,QAAO,GAAG,aAHT;AAAA,QAIDW,KAAI,GAAC,MAJJ;AAKA,UAAMK,YAAY,GAAGV,IAAI,CAACW,KAAL,CAAWb,YAAY,CAACc,OAAb,CAAqB,cAArB,CAAX,CAArB;;AACA,QAAIF,YAAY,IAAI,IAApB,EAA0B;AACxBlB,MAAAA,UAAS,GAAGkB,YAAY,CAAClB,SAAb,GAAyBkB,YAAY,CAAClB,SAAtC,GAAkDA,UAA9D;AACAG,MAAAA,KAAI,GAAGe,YAAY,CAACf,IAAb,GAAoBe,YAAY,CAACf,IAAjC,GAAwC,EAA/C;AACAF,MAAAA,SAAQ,GAAGiB,YAAY,CAACjB,QAAb,GAAwBiB,YAAY,CAACjB,QAArC,GAAgDA,SAA3D;AACAC,MAAAA,QAAO,GAAGgB,YAAY,CAAChB,OAAb,GAAuBgB,YAAY,CAAChB,OAApC,GAA8CA,QAAxD;AACD;;AACJ,SAAKH,KAAL,GAAa;AACXc,MAAAA,IAAI,EAAJA,KADW;AAERV,MAAAA,IAAI,EAAJA,KAFQ;AAGRH,MAAAA,SAAS,EAATA,UAHQ;AAIRC,MAAAA,QAAQ,EAARA,SAJQ;AAKRC,MAAAA,OAAO,EAAPA;AALQ,KAAb;AAOE;;AAgCDmB,EAAAA,MAAM,GAAG;AACP,WACH;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,KAAK,EAAE;AACXC,QAAAA,OAAO,EAAE,MADE;AAEXC,QAAAA,aAAa,EAAC;AAFH,OAAZ;AAID,MAAA,SAAS,EAAC,mBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMF,oBAAC,cAAD;AACU,MAAA,MAAM,EAAE,KAAKP,UADvB;AAEU,MAAA,IAAI,EAAE,KAAKlB,SAAL,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANE,EAUA,oBAAC,sBAAD;AACC,MAAA,cAAc,EAAE,KAAKc,cADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,EAaA,oBAAC,kBAAD;AACD,MAAA,IAAI,EAAE,KAAKb,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,CADD,EAkBK,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWI,IADpB;AAEE,MAAA,QAAQ,EAAE,KAAKC,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBL,EAsBD,oBAAC,UAAD;AACC,MAAA,IAAI,EAAE,KAAKM,YADZ;AAEC,MAAA,MAAM,EAAExB,IAFT;AAGC,MAAA,MAAM,EAAC,MAHR;AAIO,MAAA,KAAK,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBC,CADA,CADF,CADG;AAmCD;;AA1FsC;;AA6FzC,eAAeS,UAAf","sourcesContent":["import React from 'react';\nimport PostForm from './PostFormPage';\nimport {post} from '../../../apis/serverRequest';\nimport TagsInput from 'react-tagsinput';\nimport PostTypeSelector from './PostTypeSelector';\nimport styled from 'styled-components';\nimport PostMarkdown from './PostMarkdown';\nimport PostSubmit from './PostSubmit';\n// const StyledPostSubmit = styled(PostSubmit)`\n// `;\n// const StyledTagsInput = styled(TagsInput)`\n// `;\nconst StyledPostTypeSelector = styled(PostTypeSelector)`\n\tflex: 1 0 70px;\n\tmax-width: 100px;\n\tpadding-right: 150px;\n\tpadding-left: 10px;\n`;\nconst StyledPostForm = styled(PostForm)`\n\tdisplay: block;\n\tmax-width: 700px;\n\tflex: 9 0 600px;\n`;\nconst StyledPostMarkdown = styled(PostMarkdown)`\n\tpadding: 5%\n\tflex: 9 0 700px;\n\tmax-width: 700px;\n\tmin-width: 600px;\n\tdisplay: block;\n\tdisplay: inline-block; \n`;\n\n\n\nclass CreatePost extends React.Component {\n  constructor() {\n    super();\n    let mainTitle = 'Title',\n      tags = ['default'],\n      subTitle = 'Sub title',\n\t  content = 'fill in ...',\n\t  type='POST';\n    const rememberPost = JSON.parse(localStorage.getItem('rememberPost'));\n    if (rememberPost != null) {\n      mainTitle = rememberPost.mainTitle ? rememberPost.mainTitle : mainTitle;\n      tags = rememberPost.tags ? rememberPost.tags : [];\n      subTitle = rememberPost.subTitle ? rememberPost.subTitle : subTitle;\n      content = rememberPost.content ? rememberPost.content : content;\n    }\n\tthis.state = {\n\t  type,\n      tags,\n      mainTitle,\n      subTitle,\n      content,\n    };\n  }\n\n  initValue = () => {\n    const {mainTitle, subTitle, content, tags} = {...this.state};\n    return {\n      tags,\n      mainTitle,\n      subTitle,\n      content,\n    };\n  };\n\t\t\n  handleTagsChange = tags => {\n    this.setState({tags: tags});\n    localStorage.setItem('rememberPost', JSON.stringify(this.state));\n  };\n  handleCommit = async data => {\n    //\tconst response = await post.post(\"/post/\", this.state);\n  };\n  handlePostType = type => {\n    this.setState({type});\n    console.log(this.state.type);\n  }\n  //\n  handleSave = childState => {\n    this.setState({mainTitle: childState.mainTitle});\n    this.setState({content: childState.content});\n    this.setState({subTitle: childState.subTitle});\n    console.log(this.state);\n    localStorage.setItem('rememberPost', JSON.stringify(this.state));\n  };\n\n  render() {\n    return (\n\t<div className=\"posting\">\n\t  <div className=\"plain-post-form-0\">\n\t  <div className=\"plain-post-form-1\">\n\t\t  <div style={{\n\t\t\t  display: 'flex',\n\t\t\t  flexDirection:'row',\n\t\t  }}\n\t  className=\"plain-post-form-2\"\n\t  >\t\t\n\t\t<StyledPostForm\n            onSave={this.handleSave}\n            post={this.initValue()}\n          />\n\t\t  <StyledPostTypeSelector\n\t\t  \thandlePostType={this.handlePostType}\n\t\t  />\n\t\t  <StyledPostMarkdown \n\t\t\tpost={this.state}\n\t\t  />\n        </div>\n        <TagsInput\n          value={this.state.tags}\n          onChange={this.handleTagsChange}\n  \t\t/>\n\t\t<PostSubmit \n\t\t\tdata={this.handleCommit} \n\t\t\ttarget={post} \n\t\t\tmethod=\"post\"\n\t        value=\"Commit\"\n\t    />\n\t\t</div>\n\t</div>\n    </div>\n    );\n  }\n}\n\nexport default CreatePost;\n"]},"metadata":{},"sourceType":"module"}